<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>no.kantega</groupId>
	<artifactId>UX</artifactId>
	<packaging>jar</packaging>
	<name>UX</name>
	<description>UX</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<npm.output.directory>frontend/build</npm.output.directory>
		<PUBLIC_URL>${project.finalName}/</PUBLIC_URL>
        <REACT_APP_ROUTER_BASE>/${project.finalName}/</REACT_APP_ROUTER_BASE>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.15</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
    		<groupId>commons-io</groupId>
    		<artifactId>commons-io</artifactId>
    		<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		
		<dependency>
    		<groupId>commons-collections</groupId>
    		<artifactId>commons-collections</artifactId>
    		<version>3.2.2</version>
		</dependency>
		<dependency>
    		<groupId>org.apache.commons</groupId>
    		<artifactId>commons-csv</artifactId>
    		<version>1.5</version>
		</dependency>
		<dependency>
    		<groupId>com.opencsv</groupId>
    		<artifactId>opencsv</artifactId>
    		<version>4.2</version>
		</dependency>

		 <dependency> <groupId>com.oracle.jdbc</groupId> <artifactId>ojdbc7</artifactId> 
			<version>12.1.0.1</version> </dependency> 
<!-- 		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
 -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>2.6.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
	</dependencies>

	<build>
	
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>${npm.output.directory}</directory>
						</resource>
					</webResources>
					<webXml>${basedir}/web.xml</webXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<!-- Required: The following will ensure `npm install` is called before 
						anything else during the 'Default Lifecycle' -->
					<execution>
						<id>npm install (initialize)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<workingDirectory>frontend</workingDirectory>
							<installDirectory>target</installDirectory>
							<addResources>true</addResources>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Required: The following will ensure `npm install` is called before 
						anything else during the 'Clean Lifecycle' -->
					<execution>
						<id>npm install (clean)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-clean</phase>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
					</execution>

					<!-- Required: This following calls `npm run build` where 'build' is 
						the script name I used in my project, change this if yours is different -->
					<execution>
						<id> npm run build (compile)</id>
						<goals>
							<goal>exec</goal>
						</goals>
						
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>run</argument>
								<argument>build</argument>
							</arguments>
						</configuration>
					</execution>

				</executions>

				<configuration>
					<environmentVariables>
						<CI>true</CI>
						<!-- The following parameters create an NPM sandbox for CI -->
						<NPM_CONFIG_PREFIX>${basedir}/npm</NPM_CONFIG_PREFIX>
						<NPM_CONFIG_CACHE>${NPM_CONFIG_PREFIX}/cache</NPM_CONFIG_CACHE>
						<NPM_CONFIG_TMP>${project.build.directory}/npmtmp</NPM_CONFIG_TMP>
					</environmentVariables>
				</configuration>
			</plugin>
			<!-- <plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<configuration>
							<target>
								<copy todir="${project.basedir}/target/classes/public/UX">
									<fileset dir="${project.basedir}/frontend/build" />
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->
		</plugins>
		<finalName>UX</finalName>
	</build>

</project>